@* @inherits LayoutComponentBase
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>
 *@

@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Services.AuthService AuthService
@inject NavigationManager Nav
@inherits LayoutComponentBase

<MudThemeProvider />

<MudLayout>
    <MudAppBar Color="Color.Primary" Elevation="4">
        <MudText Typo="Typo.h6">Message Exchange</MudText>
        <MudSpacer />
        @if (isUserLoggedIn){
            <MudButton Variant="Variant.Text" Class="mud-theme-primary">Messages</MudButton>
            <MudSpacer />
            <MudButton Variant="Variant.Text" Color="Color.Error" OnClick="Logout">Logout</MudButton>
        } else {
            <MudButton Variant="Variant.Text" Color="Color.Success">Login</MudButton>
            <MudSpacer />
            <MudButton Variant="Variant.Text" Class="mud-theme-primary">Register</MudButton>
        }
    </MudAppBar>

    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private bool isUserLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isUserLoggedIn = authState.User.Identity?.IsAuthenticated ?? false;
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Nav.NavigateTo("/login", true);
    }
}
